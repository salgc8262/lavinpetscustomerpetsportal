# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-09-15 02:29
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import services.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('animal', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsultationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ExamCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ExamName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.ExamCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(max_length=20)),
                ('date', models.DateField(default=datetime.date.today)),
                ('paid', models.CharField(blank=True, choices=[('no', 'No'), ('yes', 'Yes')], default='no', max_length=3)),
                ('service_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VaccineType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.Service')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('temperature', models.CharField(blank=True, max_length=3)),
                ('bodyweight', models.CharField(blank=True, max_length=10)),
                ('body_condition', models.CharField(blank=True, choices=[('0', '1 - Very thin'), ('1', '2 - Underweight'), ('2', '3 - Ideal weight'), ('3', '4 - Overweight'), ('4', '5 - Obese')], max_length=1)),
                ('hydration', models.CharField(blank=True, choices=[('no_dehydration', 'No dehydration'), ('reports_loss_of_liquids', 'Less than 5% - Reports loss of liquids'), ('mild', '5 to 6% - Mild'), ('moderate', '7 to 9% - Moderate'), ('severe', '10 to 12% - Severe'), ('hypovolemic_shock', '12 to 15% - Hypovolemic shock')], max_length=25)),
                ('mucous_membrane', models.CharField(blank=True, choices=[('pink', 'Pink'), ('blue', 'Blue'), ('pale', 'Pale'), ('icteric', 'Icteric'), ('congested', 'Congested')], max_length=10)),
                ('palpable_thyroid', models.CharField(blank=True, choices=[('normal', 'Normal'), ('abnormal', 'Abnormal')], max_length=10)),
                ('palpable_thyroid_note', models.CharField(blank=True, max_length=255)),
                ('auscultation', models.CharField(blank=True, choices=[('normal', 'Normal'), ('abnormal', 'Abnormal')], max_length=10)),
                ('auscultation_note', models.CharField(blank=True, max_length=255)),
                ('abdominal_palpation', models.CharField(blank=True, choices=[('normal', 'Normal'), ('abnormal', 'Abnormal')], max_length=10)),
                ('abdominal_palpation_note', models.CharField(blank=True, max_length=255)),
                ('additional_findings', models.TextField(blank=True)),
                ('consultation_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.ConsultationType')),
            ],
            bases=('services.service',),
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.Service')),
                ('exam_type', models.CharField(choices=[('collect', 'Exam conducted'), ('request', 'Request of exam'), ('annex', 'Attach exam')], default=True, max_length=10)),
                ('exam_file', models.FileField(blank=True, null=True, upload_to=services.models.exam_path)),
                ('note', models.TextField(blank=True)),
                ('exam_in_consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.Consultation')),
                ('exam_list', models.ManyToManyField(to='services.ExamName')),
            ],
            bases=('services.service',),
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='services.Service')),
                ('lot', models.CharField(blank=True, max_length=255)),
                ('booster', models.DateField(blank=True, null=True)),
                ('note', models.TextField(blank=True)),
                ('vaccine_in_consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.Consultation')),
                ('vaccine_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.VaccineType')),
            ],
            bases=('services.service',),
        ),
        migrations.AddField(
            model_name='service',
            name='animal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='animal.Animal'),
        ),
    ]
